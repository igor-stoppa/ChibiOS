/* MISRA checks are not performed in header files marked as libraries or
   vendor-provided files or belonging to other subsystems.*/
-elib(*)
+libclass(angle,ansi)
+libh(core_cm4.h)
+libh(stm32f4xx.h)
+libh(*LLD.h)

/* Removing *advisory* directives and rules that would negatively impact
   code readability or not avoidable.*/
-e970                       /* Dir-4.6 */
-e9026                      /* Dir-4.9 */
-e756                       /* Rule-2.3 */
-e9058                      /* Rule-2.4 */
-e755                       /* Rule-2.5 */
-e9003                      /* Rule-8.9 */
-e9067                      /* Rule-8.11 */
-e818                       /* Rule 8.13 */
-e9078                      /* Rule-11.4 */ 
-e9079                      /* Rule-11.5 */ 
-e904                       /* Rule-15.5 */
-e9044                      /* Rule-17.8 */
-e9016                      /* Rule-18.4 */
-e844 -e954                 /* Rule-18.13 */
-e9018                      /* Rule-19.2 */
-e9024                      /* Rule-20.10 */

/* Waiver Directive 4.10, PCLint is confused by the guard used in the CMSIS
   header files, the guard is present, suppressing the noise.*/
-e451

/* Waiver Rule 3.1, the sequence "//" is mandated by standard license
   headers included on top of all source files. The sequence is part of the
   license URL and cannot be removed.*/
-e9059

/* Waiver Rule 8.7, the static analyzer has no visibility of functions called
   from asm modules.*/
-e765

/* Waiver Rule 11.6, cast from integer to pointer is very commonly used
   when accessing peripherals where the numeric address of the registers
   block is cast to a structure pointer.*/
-e923

/* Waiver Rule 16.3, missing break into case. It is a common occurrence and
   thoroughly checked.*/
-e9090
-e616
-e825

/* Waiver Rule 21.1, this is an operating system, its identifiers are
   equivalent in importance to compiler symbols.*/
-e9071
